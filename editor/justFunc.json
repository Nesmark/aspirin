{
  "add": "\ntpl = `\n<div class=\"btn-group\">\n<button class=\"btn btn-mini btn-default act-back\">\n<span class=\"icon icon-left-open-big\"></span>\n</button>\n<button class=\"btn btn-mini btn-default act-save\">\n<span class=\"icon icon-check\"></span>\n</button>\n</div>\n<div class=\"btn-group\">\n<input type=\"text\" class=\"form-control form-control-mini\" \nplaceholder=\"enter name\">\n</div>\n`;\n\nel = $(tpl);\n\n$('#second_toolbar').html(el)\nel.find('.act-back').click(just.render);\nel.find('.act-save').click(function(){\n\tvar nn = el.find('input').val().trim();\n  if(nn && nn != ''){\n\t  just.setName(nn);\n  \tjust.render()\n  }\n});\n",
  "edit": "just.run2 = just.run; \njust.run = just.edit;\n\n$('#second_toolbar').addClass('act-edit')\n",
  "save": "if(just.name){\n\tjust.set(just.name, editor.getValue())\n}else{\n  just.run('add');\n}\njust.save();\n",
  "load": "just.load();\n just.render();\n",
  "ls": "wls = _(windowManager.windows).map(function(v){\n  return v.name + '   <sup>ø ' \n    + v.object.getPosition() + ' se ' + v.object.getSize() + ' </sup>'\n})\njustShowResult(van_dump(wls), true)\n",
  "color": "\n//justShowResult(van_dump(arguments))\nif(arguments[1]){\n  arguments[1].classList.toggle('btn-default');\n  arguments[1].classList.toggle('btn-warning');\n}\nif(typeof colorRotate == 'undefined' || !colorRotate){\n//  n=0;\n  colorRotate = setInterval(function(){\n    n = n%359;\n    clr = `hsla(${n++},82%,52%,0.5)`;\n    $('body').css('backgroundColor',clr);\n    //justShowResult(n)\n  },50);\n}else{\n  clearInterval(colorRotate);\n  colorRotate = false;\n}\n\n",
  "sJ2": "var res = _(eval(editor.getValue())).chain()\n  .mapObject(function(v, k){\n    var tpl = `<div class=\"toolbar bar result\">\n<pre> <big>${k}</big>\t\n   <code>${_.escape(String(v).trim())}</code>\n</pre></div>`\n    return tpl;\n  })\n  .values()\n\t//.first(7)\n  .value()\n  .join('<hr/>\\n')\n\n$('#composite').html(res);\nsyncSizeLines()",
  "clr": "//createBrowser('http://gooogle.com')\n$('#composite').html('');\n$('body').css('backgroundColor','transparent');\njustShowResult(null)\ndocument.querySelector('header').style.background = 'rgba(41, 120, 177, 0.5)';\n",
  "md5": "hash = md5(editor.getValue())\njustShowResult(van_dump(hash))\n",
  "ksave": "if(just.name){\n  if(!isAutoRuned)\n\tKnows.save(just.name, editor.getValue());\n  if(w = getWin(just.name)){\n  \tw.execute(\"Knows.run('\"+just.name+\"')\")\n  \tjustShowResult('<b style=\"color:orange;\">Saved code and Updated window {'+just.name+'}</b>', true)\n  }else{\n    justShowResult('<b style=\"color:green;\">Only saved code</b>', true)\n  }\n}else{\n  just.run('add');\n}\n'wait'\n",
  "Œ": "\n$('#editor').toggleClass('fliped')\n\n",
  "ß": "\n$('#composite').toggleClass('joinY')\nsyncSizeLines()\n",
  "krun": "if(w = getWin(just.name))\n  w.execute(`Knows.run('${just.name}');`)\nelse\n\tKnows.run('editor');\n\n",
  "kedit": "if(just.name){\n\tkey = just.name;\n  runCodeOverride = function(){\n     just.run('ksave');\n  }\n\tKnows.getDb().findOne({key:key}).exec(function(err,data){\n\t\tstr = data.source\n\t\teditor.setValue(str) //editor.getValue()+'\\n'+\n\t})\n}else{\n  just.run('add');\n}\n",
  "kls": "\nKnows.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  \n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<button class=\"btn btn-mini btn-default act-choose\" data-key=\"${v.key}\">\n<span class=\"icon icon-down-open-mini\"></span> \n<span class=\"icon icon-text\"> ${v.key}</span>\n</button>`;})\n  .value().join('');\n\t\n  tpl = `\n<div class=\"btn-group\">\n<button class=\"btn btn-mini btn-default act-back\">\n<span class=\"icon icon-left-open-big\"></span>\n</button>\n<button class=\"btn btn-mini btn-default act-save\">\n<span class=\"icon icon-check\"></span>\n</button>\n</div>\n<div class=\"btn-group\">${list}</div>`;  \n\n  el = $('#second_toolbar');\n  el.html(tpl);\n  el.find('.act-back').click(just.render);\n  el.find('.act-choose').click(function(e){\n    var nn = $(this).data('key');\n    if(nn && nn != ''){\n      just.setName(nn);\n      just.render()\n      just.run('kedit');\n    }\n  });\n  \n  justShowResult('done')\n});\n//Object.keys(kk)\n'wait'\n\n",
  "ToT": "q = !(typeof q == 'boolean') || !q;\nexw = [\"toolbar\", \"listknows\", \"showTime\", \"fulloverlay\"];\n_(windowManager.windows).chain()\n  .filter(function(w){\n    return !exw.includes(w.name)\n  })\n  .each(function(w){\n  w.object.setAlwaysOnTop(q);\n})\n\n",
  "ignore_mouse": "\nw = getWin(just.name)\nw.setIgnoreMouseEvents(!w.isIgnoreMouseEvents())\n",
  "jetpack_sample": "\njetpack.find(remote.app.getHomeDir()+'/Desktop/',\n             { matching: 'Screen Shot*'})\n",
  "chromeAllTabs": "\nalltabs = jetpack.read('../allTabs_chrome.json', 'json');\njustShowResult(_(alltabs).pluck('url').join('\\n'))\n",
  "editor_0": "tf = false || !tf\nw = getWin(just.name)\nw.object.setIgnoreMouseEvents(tf)\n",
  "resulttoMIN0": "var resWin = giveWin('results_from_editor');\nresWin.object.setSize(700,500)\n//justShowResult(van_dump(arguments))\njustResultToMin = function(){\n  var text = eval(editor.getValue());\n  windowManager.sharedData.set('minTest0', {'content': text});\n\n  \n  /*\n  var bounds = cw.getBounds();\n  resWin.object.setBounds({\n    \"x\": bounds.x,\n    \"y\": bounds.y+bounds.height,\n    \"width\": 680,\n    \"height\": 250\n  }, true);\n  /**/\n  resWin.execute(`\ndocument.getElementById('isText').onclick=function(){\n  textMode = !textMode; \n  document.getElementById('isText').innerText = textMode?'[TEXT]':'[HTML]';  \ndata = windowManager.sharedData.fetch('minTest0');\n  setData(data.content); \n}\ndata = windowManager.sharedData.fetch('minTest0');\n  setData(data.content)`);\n  \n}\n\n\nif(arguments[1]){\n  arguments[1].classList.toggle('btn-default');\n  arguments[1].classList.toggle('btn-warning');\n}\n\nif(typeof resulttomin == 'undefined' || !resulttomin){\n  runCodeOverride = justResultToMin;\n  resulttomin = true\n}else{\n  runCodeOverride = false;\n  resulttomin = false;\n}\n\n",
  "SaveToCodeList": "if(just.name){\n\tsource = editor.getValue()\n  hash = md5(source)\n  doc = { key: just.name || hash, source: source, md5: hash, system: 'solar', isFunc: false }\n\n  Database.getDb().update({key:doc.key}, doc, {upsert: true});\n\n}else{\n  just.run('add');\n}\n\n",
  "addMatrixXYfunc": "if(just.name){\n\tsource = editor.getValue()\n  hash = md5(source)\n  doc = { key: just.name, source: source, md5: hash, matrix: 'matrix1', isFunc: true }\n\n  Matrix.getDb().update({key:doc.key}, doc, {upsert: true});\n\n}else{\n  just.run('add');\n}\n\n",
  "deleteMatrixXYfunc": "if(just.name){\n\tsource = editor.getValue()\n  hash = md5(source)\n  doc = { key: just.name, matrix: 'matrix1', isFunc: true }\n\n  Matrix.getDb().remove({key:doc.key});\n\n}else{\n  just.run('add');\n}\n\n",
  "matrix1": "cw.setBounds({\"x\": 830,\"y\": 60, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/tpl.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\nqcount = document.getElementById('qcount');\nfuncClass = {};\n///////////////////////////////////////////////////////////////\nvar streamer = new ya.speechkit.SpeechRecognition();\n\naska_speech_recording = function(){\n  window.ya.speechkit.settings.apikey = 'f7466144-de15-4c9e-b593-375ef49027b8';\n  streamer.start({\n    format: ya.speechkit.FORMAT.PCM44,\n    initCallback: function () {\n      console.log(\"Началась запись звука.\");\n    },\n    dataCallback: function (text, done, merge, time) {\n      if(done == true){\n        //if(text != \"\"){  \n        text = text.substring(0,text.length-1);\n\n        speechQuant = {\n          speed:{\n            x:0,\n            y:1\n          },\n          x:32,\n          y:1,\n          data:text\n        };\n        //console.log(text);\n\n        quants.push(JSON.parse(JSON.stringify(speechQuant)));\n        windowManager.sharedData.set('quants', quants);\n      }\n    },\n    errorCallback: function (err) {\n      speechQuant = {\n        speed:{\n          x:0,\n          y:1\n        },\n        x:34,\n        y:1,\n        data:'возникла ошибка'\n      };\n      //console.log(text);       \n      quants.push(JSON.parse(JSON.stringify(speechQuant)));\n      windowManager.sharedData.set('quants', quants);\n    },\n    infoCallback: function (sent_bytes, sent_packages, processed, format) {\n    },\n    stopCallback: function () {\n      console.log(\"Запись звука прекращена.\");\n    },\n    particialResults: false,\n    utteranceSilence: 1\n  });\n}\n////////////////////////////////////////////////////////////////\nnew_bazon = function(xg,yg,dat){\n  speechQuant2 = {\n    speed:{\n      x:0,\n      y:1\n    },\n    x:xg,\n    y:yg,\n    data:dat\n  };\n  //console.log(text);       \n  quants.push(JSON.parse(JSON.stringify(speechQuant2)));\n  windowManager.sharedData.set('quants', quants);\n}\n////////////////////////////////////////////////////////////////\nmatrix_new_bazon = function(xg,yg){\n  speechQuant2 = {\n    speed:{\n      x:0,\n      y:1\n    },\n    x:xg,\n    y:yg,\n    data:'0'\n  };\n  //console.log(text);       \n  quants.push(JSON.parse(JSON.stringify(speechQuant2)));\n  windowManager.sharedData.set('quants', quants);\n}\n/////////////////////////////////////////////////////////////////\naska = function(text){\n  var audio = document.getElementById('audio');\n  var url = 'https://tts.voicetech.yandex.net/generate?'+\n      'key=f7466144-de15-4c9e-b593-375ef49027b8'+\n      '&text='+encodeURI(text)+\n      '&format=mp3'+\n      '&lang=ru-RU'+\n      '&topic=queries'+\n      '&robot=1'+\n      '&emotion=evil';\n  audio.src = url;\n  audio.load();\n  audio.onloadeddata = function () {\n    audio.play();\n  }\n}\n////////////////////////////////////////////////////////////////\nif(typeof quants === 'undefined')quants = [];\n//quants = [];\n\ntestQuant = {\n  speed:{\n    x:0,\n    y:1\n  },\n  x:36,\n  y:1,\n  data:'start'\n};\n\nloadFunc = (e,docs)=>{\n\n  out = docs.map(d=>({key:d.key, source:d.source}))\n\n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n\n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n\n  //preout.innerHTML = van_dump(fns);\n\n}\n\ncalculate = q => {\n  //console.log(q)\n  //console.log(\" смотри сюда\");\n  var qq = q;\n  Object.keys(q.speed).forEach(k=>q[k] += q.speed[k])\n  if(0==(qq.x = q.x%67))qq.y++;\n  //qq.y = qq.y%42\n\n  var fname = `x${q.x}y${q.y}`;\n\n  if(funcClass.hasOwnProperty(fname)){\n    funcClass[fname].apply(qq,[qq.data]);\n  }\n\n\n\n}\n\n//preout.innerHTML = van_dump(calculate(testQuant))\n\nstartrun = function(){\n  //funcClass = _.clone(windowManager.sharedData.fetch('funcClass'));\n  quants.forEach(calculate)\n  windowManager.sharedData.set('quants', quants);\n  preout.innerHTML = van_dump(quants);\n  qcount.innerHTML = quants.length;\n}\n\nif(typeof onlyOneLoop === 'undefined')onlyOneLoop = false;\n\nclrint = function(){\n  clearInterval(onlyOneLoop);\n  streamer.pause();\n}\nclrint();\n\nreset = function(){\n  Matrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(loadFunc)\n  quants = [];\n}\n\nsettmr = function(){\n  aska_speech_recording();\n  tme = document.getElementById('mtimeout').selectedOptions[0].value;\n  clearInterval(onlyOneLoop);\n  onlyOneLoop = setInterval(startrun,tme);\n}\n\n//settmr();\n//startrun()\n\n\n\n\n\ndocument.getElementById('mquantadd').onclick = ()=>{\n  quants.push(JSON.parse(JSON.stringify(testQuant)));\n  //quants.push(_.extend(_.clone(testQuant), {x:3}));\n  windowManager.sharedData.set('quants', quants);\n}\ndocument.getElementById('mreload').onclick = reset;\ndocument.getElementById('mrun').onclick = settmr;\ndocument.getElementById('mstep').onclick = ()=>{clrint();startrun();};\n\n\n\n//document.getElementById('aska').onclick = aska_yandex_zapros(\"проверка, всё работает правильно\");\ndocument.getElementById('mpause').onclick = clrint;\n\nmwname = 'matrix1_view';\ndocument.getElementById('mview').onclick = \n  ()=>giveWin(mwname).execute(`Knows.run('${mwname}')`);\n\n",
  "X_Y_Speed": "let code = `\n//this.speed.x=0;this.speed.y=-1;// ВЕРХ\n//this.speed.x=1;this.speed.y=0;// ПРАВО\n//this.speed.x=-1;this.speed.y=0;// ЛЕВО\n//this.speed.x=0;this.speed.y=1;// НИЗ\n`\neditor.setValue(code);",
  "matrix_XY_STOP": "let code =\n`\nlet i = quants.indexOf(this);\n    quants.splice(i,1);\n`\neditor.setValue(code);",
  "matrix_hold_byone": "let code =`\nvar count = 0;\nfor(i=0;i<quants.length;i++){\n  if(quants[i].x == this.x && quants[i].y == this.y){\n    count += 1;\n    if(count > 1){\n      quants[i].speed.x = 0;\n      quants[i].speed.y = 0;\n    }else{\n      quants[i].speed.x = 1;\n      quants[i].speed.y = 0;\n    }\n  }\n}\n`\neditor.setValue(code);",
  "matrix_EMPTY": "let code = `\n//EMPTY POINT\n`\neditor.setValue(code);\n",
  "matrix_TIME_delay": "let code = `\nvar delay = 3;\nvar speed_x = 0;\nvar speed_y = -1;\n\nlet localX = this.x;\nlet localY = this.y;\nvar way = 'F:/ajr/aspirin/matrix/data/matrix_my_data/X'+localX+'_Y'+localY+'.json';\n\nvar time = new Date().getSeconds();\n//////////////////////////////////////////////////////////////////////\nif(this.speed.x == speed_x && this.speed.y == speed_y){\n  this.speed.x = 0;\n  this.speed.y = 0;\n\n  time+= delay;\n  time = time%59;\n  jetpack.write(way,time);\n}else{\n  //////////////////////////////////////////////////////////////////\n  if(this.speed.x == 0 && this.speed.y == 0){\n    var i = parseFloat(jetpack.read(way , 'json'));\n    if(i == time){\n      this.speed.x = speed_x;\n      this.speed.y = speed_y;\n    }\n  }\n}\n`\neditor.setValue(code);\n\n"
}