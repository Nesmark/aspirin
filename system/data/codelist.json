{"key":"toolbar_setup","source":"PrimaryDisplay = require('screen').getPrimaryDisplay()\ntw = getWin('toolbar')\n  tw.move(PrimaryDisplay.bounds.width - 63, 25);\n  tw.object.setSize(60,400)\n\n","md5":"310ea352cf90667b2a4496c3f75a4555","system":"solar","isFunc":false,"_id":"28nRUYYIrngVej3D"}
{"key":"matrix1_view","source":"cw.setBounds({\"x\": 5,\"y\": 30, \"width\": 600, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\n\nquants = windowManager.sharedData.fetch('quants');\nqmt = quants.map((v)=>v.join('\\t')).join('\\n')\ntxt = '<pre>' + qmt + '</pre>'\nsetContent(txt)\n","md5":"bf4cac69bd715c3fa784379a8b5a3bbf","system":"solar","isFunc":false,"_id":"5hQhWK6GvUZINy8E"}
{"key":"localStorageUnderscorePrint","source":"\n\narr = _.chain(localStorage).mapObject(d=>JSON.parse(d))\n  .map((d,k)=>[k,_.pluck(d,'sourceText')]).flatten().compact().uniq().value()//.length\n  //.values().flatten().pluck('sourceText').uniq().value()//.length\narr.map((d,k)=>`<h1>---${k}------------------------------------------</h1> \n\\n <pre>${_.escape(d)}</pre>`).join('\\n')","md5":"cb2c3fc56fb8e0de4b8a53d24c231c1c","system":"solar","isFunc":false,"_id":"87b5M8LyTq8FaTmN"}
{"key":"gavnocod","source":"\nd = ' ∆ '\nwwe = 11\ntxt0 = _(windowManager.windows).chain()\n  .filter(function(v){return 'editor_' == v.name.substr(0,7)})\n  .map(function(v){\n  \t//v.reload(true)\n    //v.object.send('justScrollAll')\n  \treturn v.object.id+' '+v.name\n\t})\n  .value()\n_(JSON.parse(localStorage.Knows)).pluck('sourceText')\n\nq = !(typeof q == 'boolean') || !q\ngetWin(just.name).object.setIgnoreMouseEvents(q)\ntxt = `<code>TEST 1\n<br/>\n<pre>${van_dump(txt0)}</pre>\n</code><br/>\n<pre>${van_dump(Object.keys(cw))}</pre>\ndf`;\ngetWin(just.name).execute('setContent(`'+txt+'`)')\n\nwwidth = 250\ngetWin(just.name).object.setPosition(screen.width-wwidth, 0)\ngetWin(just.name).object.setSize(wwidth, screen.height)\n\n//JSON.parse(localStorage.Knows)[14].sourceText\nMatrix.getDb().getAllData()\n1\n\ntableify = require('tableify');\n\ndata = Matrix.getDb().getAllData()\ntableify(data)\n\n\n","md5":"d0bbe37dd53b09c55de39da81617b8ec","system":"solar","isFunc":false,"_id":"9r8EhcUvsR37IJKp"}
{"key":"nedb_sample","source":"doc1 = { key: 'firstCode', source: '\"000Mars2\"', system: 'solar', isFunc: false }\n\ndoc2 = { hello: 'world'\n               , n: 5\n               , _id: \"id89\"\n               , today: new Date()\n               , nedbIsAwesome: true\n               , notthere: null\n               , notToBeSaved: undefined  // Will not be saved\n               , fruits: [ 'apple', 'orange', 'pear' ]\n               , infos: { name: 'nedb' }\n               };\n\n\nmdb = Matrix.getDb()\nk = {key: doc1.key}\nmdb.update(k, doc1, {upsert: true});\n//mdb.insert(doc1);\nMatrix.save","md5":"28f6e5f965074e9266eae62b9de43a4d","system":"solar","isFunc":false,"_id":"F3rQBsJl7iN3ZlwN"}
{"key":"timeout_test","source":"\ntimeout = 50\nb = a\n\na = new Date().getTime()\n\na - b\n\n\n","md5":"8c6094465bbb15eb95fe7f21c9580724","system":"solar","isFunc":false,"_id":"FobSmVxQjaRCTyRV"}
{"key":"matrix1","source":"cw.setBounds({\"x\": 1030,\"y\": 30, \"width\": 400, \"height\": 350}, true);\ncw.setAlwaysOnTop(true)\ntpl = jade.compileFile('./matrix/tpl.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt)\n\nif(typeof quants === 'undefined')quants = [];\n\n\nmatrize = qv => qv.map(v=>v.join('\\t')).join('\\n')\n\n\n\npreout = document.getElementById('preout');\n\nm = 0\nn = 0\nz = 0\nquants = []\n  \nstartrun = function(){\n  quants[m] = quants[m] || []\n  quants[m][z++] = n++;\n  \n   \n  if(0 == (z = z%5)) m++;\n  m=m%5;\n  windowManager.sharedData.set('quants', quants);\n\n  preout.innerHTML = matrize(quants);\n}\n\nif(typeof onlyOneLoop === 'undefined')onlyOneLoop = false;\n\nclrint = function(){\n  clearInterval(onlyOneLoop);\n}\nclrint();\nreset = function(){\n  \n  m = 0\n  n = 0\n  z = 0\n  quants = []\n}\nsettmr = function(){\n  tme = document.getElementById('mtimeout').selectedOptions[0].value;\n  clearInterval(onlyOneLoop);\n  onlyOneLoop = setInterval(startrun,tme);\n}\n//settmr();\nstartrun()\ndocument.getElementById('mreload').onclick = reset;\ndocument.getElementById('mrun').onclick = settmr;\ndocument.getElementById('mstep').onclick = startrun;\ndocument.getElementById('mpause').onclick = clrint;","md5":"692e6f5f5d724e61e0f67ac2907d4876","system":"solar","isFunc":false,"_id":"GTFcEpkBNEdzyjpn"}
{"key":"tableify_sample","source":"\ntableify = require('tableify');\n\ndata = Matrix.getDb().getAllData()\ntableify(data)\n","md5":"0373057362482bdd2713f87409a5f1aa","system":"solar","isFunc":false,"_id":"HseDOLx4v6n4aukt"}
{"key":"split_xNNyNNv1","source":"\nfns = ['x10y5','x5y5','x33','y22','x00','0x0','0y0']\n\n\nfns.map(fname=>{\n  var xy = fname.split('y');\n  var obj = {};\n  xy[0] = xy[0].substr(1);\n  if(xy[0]) obj.x = xy[0]*1;\n  if(xy[1]) obj.y = xy[1]*1;\n  return obj\n})\n","md5":"015c24e1ffd5b5bb567c3a6b179165ab","system":"solar","isFunc":false,"_id":"INyrPq1dnwXCg1H8"}
{"key":"using_ES6arrowFunction","source":"s = 0\n\"use strict\";\n\ns = (i) => i*2\n\ns(3)","md5":"fe237dbd6929efcc5f47131465560bfa","system":"solar","isFunc":false,"_id":"IxgNOjJJt5KbhGLK"}
{"key":"reload_M_database","source":"\nKnows.getDb().loadDatabase()\nMatrix.getDb().loadDatabase()\n","md5":"3fc05b0c892d4225386b8e7836c18564","system":"solar","isFunc":false,"_id":"IyzORoR4f8WW4ETp"}
{"key":"doubleArraySample","source":"timeout = 1;\n/*\nz = 0\nn = 0\nm = 0\nq = []\n/**/\n\n\nn++;\nif(0 == (n = n%10)) m++;\nm = m%10;\nz = z%55;\nq[n] = q[n] || []\nq[n][m] = z++ //+' |' + m +''+ n;\n\n\nq.map(function(v){return v.join('\\t')}).join('\\n')\n\n//a = 12\n\n","md5":"5cffc538f749ceaf8bd05051b5217dfe","system":"solar","isFunc":false,"_id":"O6bZMEQ1teIcgm2z"}
{"key":"split_xNNyNNv2","source":"\n\nfns = ['x10y5','x5y5','x33','y22','x00','0x0','0y0']\n\n\nfns.map(fname=>fname.split('y').reduce((memo, val)=>{\n  if(val.charAt(0)=='x'){\n    memo.x = 1*val.substr(1);\n  }else{\n    memo.y = 1*val}\n  return memo\n},{}))\n\n\n//'y5x2'.split('y')[0].split('x')\n\n\n\n","md5":"8bd377f30afd214fc406a4f94699e520","system":"solar","isFunc":false,"_id":"S08hPvCdJuWq9zQW"}
{"key":"∆","source":"\nd = ' ∆ '\nwwe = 11\ntxt0 = _(windowManager.windows).chain()\n  .filter(function(v){return 'editor_' == v.name.substr(0,7)})\n  .map(function(v){\n  \t//v.reload(true)\n    //v.object.send('justScrollAll')\n  \treturn v.object.id+' '+v.name\n\t})\n  .value()\n_(JSON.parse(localStorage.Knows)).pluck('sourceText')\n\nq = !(typeof q == 'boolean') || !q\ngetWin(just.name).object.setIgnoreMouseEvents(q)\ntxt = `<code>TEST 1\n<br/>\n<pre>${van_dump(txt0)}</pre>\n</code><br/>\n<pre>${van_dump(Object.keys(cw))}</pre>\ndf`;\ngetWin(just.name).execute('setContent(`'+txt+'`)')\n\nwwidth = 250\ngetWin(just.name).object.setPosition(screen.width-wwidth, 0)\ngetWin(just.name).object.setSize(wwidth, screen.height)\n\n//JSON.parse(localStorage.Knows)[14].sourceText\nMatrix.getDb().getAllData()\n1\n\ntableify = require('tableify');\n\ndata = Matrix.getDb().getAllData()\ntableify(data)\n\n\n","hash":"d0bbe37dd53b09c55de39da81617b8ec","system":"solar","isFunc":false,"_id":"Xuu091XGH5eaL7G3"}
{"_id":"id0","planet":"000Mars2","system":"solar","inhabited":false}
{"_id":"id1","planet":"Mars","system":"solar","inhabited":false}
{"_id":"id2","planet":"Mars2","system":"solar","inhabited":false}
{"hello":"world","n":5,"_id":"id3","today":{"$$date":1466926505038},"nedbIsAwesome":true,"notthere":null,"fruits":["apple","orange","pear"],"infos":{"name":"nedb"}}
{"hello":"world","n":5,"_id":"id8","today":{"$$date":1466926513383},"nedbIsAwesome":true,"notthere":null,"fruits":["apple","orange","pear"],"infos":{"name":"nedb"}}
{"hello":"world","n":5,"_id":"id89","today":{"$$date":1266923720499},"nedbIsAwesome":true,"notthere":null,"fruits":["apple","orange","pear"],"infos":{"name":"nedb"}}
{"key":"nodetest","source":"\nconsole.log('G>> ', n)\nglobal['test'] = n++\n\n","md5":"2519d270da151c51e1fe948bfdd8f37d","system":"solar","isFunc":false,"_id":"jQm4Ok4tRkdWF7hh"}
{"key":"matrix1_newFn_theory","source":"testQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:0,\n  y:0\n};\ntqq = _.extend(_.clone(testQuant), {y:3,data:['firstArg','asteroidevotake']})\nsss = (err, docs)=>{\n\n  arr = docs.map(d=>({key:d.key, source:d.source}))\n\n\n  funcClass = arr.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function(cv.source);\n    return pv;\n  },{})\n  //justResult(van_dump(out));\n\n}\nMatrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(sss)\n\n///////\n\nef = `\n\n\nconsole.log(data,this)\n\ndata.push('dsa'+n++);\nreturn van_dump(data)\n`\n\nnewFn = (src)=> {\n  var n = 10;\n  return new Function('data',src);\n}\nrunFn = (fn, ags)=>{\n  rtf.apply(tq, [tq.data, 'secondArg'])\n}\nrtf = newFn(ef)\n//_.functions(funcClass)\n\nrtf.apply(tq, [tq.data, 'secondArg'])\n","md5":"82ed53e3fc8dd53298b57c990761dc89","system":"solar","isFunc":false,"_id":"mUOOHAn57SvGbge9"}
{"key":"SaveToCodeList","source":"source = editor.getValue()\nhash = md5(source)\ndoc = { key: just.name || hash, source: source, md5: hash, system: 'solar', isFunc: false }\n\nMatrix.getDb().update({key:doc.key}, doc, {upsert: true});","md5":"410b83955b5c7c344e9ee7705a16d024","system":"solar","isFunc":false,"_id":"oZ6YooCJ5j2wvvsS"}
{"key":"min_0_setConten_sample","source":"\ntableify = require('tableify');\n\nrend = function(e,d){\n  d1 = _.map(d,function(v){\n    return _.values(v).join(', ')\n  })\n  justShowResult(van_dump(d1));\n  windowManager.sharedData.set('minTest0', {'content': van_dump(d)});\n  getWin('min_0').execute(`data = windowManager.sharedData.fetch('minTest0');\n  setData(data.content)`);\n  console.table(d);\n}\n\nMatrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(rend)\n\n","md5":"ac5f094b93466edbce117d4c24377a88","system":"solar","isFunc":false,"_id":"pZX91i20WT10itcJ"}
{"key":"firstCode","source":"\"000Mars2\"","system":"solar","isFunc":false,"_id":"sMbd2OzhgiZ68JdB"}
{"key":"localStorageKnowsPrint","source":"function htmlEncode( html ) {\n    return document.createElement( 'a' ).appendChild( \n        document.createTextNode( html ) ).parentNode.innerHTML;\n};\n\narr = JSON.parse(localStorage.Knows).filter(d=>d && d.sourceText)\narr.map((d,k)=>`<h1>---${k}------------------------------------------</h1> \n\\n <pre>${_.escape(d.sourceText)}</pre>`).join('\\n')\n\n","md5":"983f49ac3571d6b4dbf52884c39fcb66","system":"solar","isFunc":false,"_id":"toMHG2h5ebJKVAyI"}
{"key":"runInNode_nodetest","source":"\ntimeout = 1\nremote.app.Database.run('nodetest')\n//Database.run('nodetest')\n\n","md5":"066e06d9eecf0b477131ad63b1c3dd34","system":"solar","isFunc":false,"_id":"un7OWKM45c9JOhol"}
